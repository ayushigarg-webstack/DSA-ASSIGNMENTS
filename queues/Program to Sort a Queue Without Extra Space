#include <iostream>
#include <queue>
#include <climits>
using namespace std;

// Function to get the index of minimum element in the first 'n' elements of queue
int minIndex(queue<int>& q, int sortedIndex) {
    int min_index = -1;
    int min_val = INT_MAX;
    int n = q.size();

    for (int i = 0; i < n; i++) {
        int current = q.front();
        q.pop();

        // We only check unsorted part (i <= sortedIndex)
        if (current <= min_val && i <= sortedIndex) {
            min_index = i;
            min_val = current;
        }

        q.push(current);
    }
    return min_index;
}

// Function to move the element at min_index to the rear of the queue
void insertMinToRear(queue<int>& q, int min_index) {
    int min_val;
    int n = q.size();

    for (int i = 0; i < n; i++) {
        int current = q.front();
        q.pop();

        if (i == min_index)
            min_val = current;
        else
            q.push(current);
    }
    q.push(min_val);
}

// Function to sort the queue
void sortQueue(queue<int>& q) {
    for (int i = 1; i <= q.size(); i++) {
        int min_index = minIndex(q, q.si_

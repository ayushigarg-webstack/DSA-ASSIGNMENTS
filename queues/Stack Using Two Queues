#include <iostream>
#include <queue>
using namespace std;

class StackUsingTwoQueues {
    queue<int> q1, q2;

public:
    // Push operation
    void push(int x) {
        // Push to q2
        q2.push(x);

        // Move all elements from q1 to q2
        while (!q1.empty()) {
            q2.push(q1.front());
            q1.pop();
        }

        // Swap names of q1 and q2
        swap(q1, q2);
        cout << x << " pushed successfully!" << endl;
    }

    // Pop operation
    void pop() {
        if (q1.empty()) {
            cout << "Stack is empty!" << endl;
            return;
        }
        cout << q1.front() << " popped successfully!" << endl;
        q1.pop();
    }

    // Peek (top element)
    void top() {
        if (q1.empty()) {
            cout << "Stack is empty!" << endl;
            return;
        }
        cout << "Top element: " << q1.front() << endl;
    }

    // Check if stack is empty
    bool isEmpty() {
        return q1.empty();
    }

    // Display stack elements
    void display() {
        if (q1.empty()) {
            cout << "Stack is empty!" << endl;
            return;
        }
        queue<int> temp = q1;
        cout << "Stack elements (top to bottom): ";
        while (!temp.empty()) {
            cout << temp.front() << " ";
            temp.pop();
        }
        cout << endl;
    }
};

int main() {
    StackUsingTwoQueues s;
    int choice, val;

    do {
        cout << "\n--- STACK USING TWO QUEUES ---\n";
        cout << "1. Push\n2. Pop\n3. Top\n4. Display\n5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter value to push: ";
                cin >> val;
                s.push(val);
                break;
            case 2:
                s.pop();
                break;
            case 3:
                s.top();
                break;
            case 4:
                s.display();
                break;
            case 5:
                cout << "Exiting...\n";
                break;
            default:
                cout << "Invalid choice!\n";
        }
    } while (choice != 5);

    return 0;
}
